/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IMat;

import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.JPanel;
import se.chalmers.ait.dat215.project.CartEvent;
import se.chalmers.ait.dat215.project.Product;
import se.chalmers.ait.dat215.project.ShoppingCartListener;
import se.chalmers.ait.dat215.project.ShoppingItem;

/**
 *
 * @author axel
 */
public class ShoppingListFeaturePanel extends javax.swing.JPanel implements ShoppingCartListener {
    
    private BufferedImage img;
    private JPanel textFieldPanel;
    private IMatModel model;
    private ArrayList<ShoppingListTextFieldPanel> textFields;

    /**
     * Creates new form ShoppingListFeaturePanel
     */
    public ShoppingListFeaturePanel(IMatModel model){
        this.model = model;
        initComponents();
        
        this.setBackground(Constants.BACKGROUND_COLOR);
        containerPanel.setBackground(Constants.BACKGROUND_COLOR);
        headerPanel.setBackground(Constants.HEADER_COLOR);
        try {
            img = ImageIO.read(getClass().getResource("/iMat.resources/block.jpg"));
        } catch (IOException ex) {
            System.out.println("Background for ShoppingListPanel not found");
        }
        
        textFieldPanel = new JPanel(){
          
            protected void paintComponent(Graphics g){
                super.paintComponent(g);
                g.drawImage(img, 0, 0, null);
            }
        };
        textFields = new ArrayList();
        textFieldPanel.setLayout(new GridLayout(9, 1));
        reMakeTextFields();
        
        this.containerPanel.add(textFieldPanel);
        this.model.addCartListener(this);
    }
    
    private void reMakeTextFields(){
        textFieldPanel.removeAll();
        List<ShoppingItem> items = model.getItems();
        textFieldPanel.setLayout(new GridLayout(Math.max(9, items.size()), 1));
        for(ShoppingItem item : items){
            textFieldPanel.add(new ShoppingListTextFieldPanel(model, item));
        }
        ShoppingListTextFieldPanel shoppingItem = new ShoppingListTextFieldPanel(model);
        textFieldPanel.add(shoppingItem);
        shoppingItem.giveFocus();
        repaint();
        revalidate();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        containerScrollPane = new javax.swing.JScrollPane();
        containerPanel = new javax.swing.JPanel();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iMat.resources/block.jpg"))); // NOI18N

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setMinimumSize(new java.awt.Dimension(475, 275));
        setPreferredSize(new java.awt.Dimension(475, 275));

        headerPanel.setBackground(Constants.HEADER_COLOR);
        headerPanel.setBorder(new javax.swing.border.MatteBorder(null));
        headerPanel.setMinimumSize(new java.awt.Dimension(473, 70));
        headerPanel.setPreferredSize(new java.awt.Dimension(473, 70));

        headerLabel.setFont(Constants.FRONT_HEADER_FONT);
        headerLabel.setForeground(Constants.BACKGROUND_COLOR);
        headerLabel.setText("Ink√∂pslista");
        headerLabel.setMaximumSize(new java.awt.Dimension(32767, 32767));
        headerLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        headerLabel.setName(""); // NOI18N
        headerLabel.setPreferredSize(new java.awt.Dimension(473, 72));
        headerLabel.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanel.setLayout(new java.awt.GridLayout(1, 0));
        containerScrollPane.setViewportView(containerPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(containerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(containerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel containerPanel;
    private javax.swing.JScrollPane containerScrollPane;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables


    @Override
    public void shoppingCartChanged(CartEvent ce) {
        reMakeTextFields();
    }
}
